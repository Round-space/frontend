/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface BountiesMetaTxRelayerInterface extends ethers.utils.Interface {
  functions: {
    "bountiesContract()": FunctionFragment;
    "metaAcceptFulfillment(bytes,uint256,uint256,uint256,uint256[],uint256)": FunctionFragment;
    "metaAddApprovers(bytes,uint256,uint256,address[],uint256)": FunctionFragment;
    "metaAddIssuers(bytes,uint256,uint256,address[],uint256)": FunctionFragment;
    "metaChangeApprover(bytes,uint256,uint256,uint256,address,uint256)": FunctionFragment;
    "metaChangeBounty(bytes,uint256,uint256,address[],address[],string,uint256,uint256)": FunctionFragment;
    "metaChangeData(bytes,uint256,uint256,string,uint256)": FunctionFragment;
    "metaChangeDeadline(bytes,uint256,uint256,uint256,uint256)": FunctionFragment;
    "metaChangeIssuer(bytes,uint256,uint256,uint256,address,uint256)": FunctionFragment;
    "metaContribute(bytes,uint256,uint256,uint256)": FunctionFragment;
    "metaDrainBounty(bytes,uint256,uint256,uint256[],uint256)": FunctionFragment;
    "metaFulfillAndAccept(bytes,uint256,address[],string,uint256,uint256[],uint256)": FunctionFragment;
    "metaFulfillBounty(bytes,uint256,address[],string,uint256)": FunctionFragment;
    "metaIssueAndContribute(bytes,address[],address[],string,uint256,address,uint256,uint256,uint256)": FunctionFragment;
    "metaIssueBounty(bytes,address[],address[],string,uint256,address,uint256,uint256)": FunctionFragment;
    "metaPerformAction(bytes,uint256,string,uint256)": FunctionFragment;
    "metaRefundContribution(bytes,uint256,uint256,uint256)": FunctionFragment;
    "metaRefundContributions(bytes,uint256,uint256,uint256[],uint256)": FunctionFragment;
    "metaRefundMyContributions(bytes,uint256,uint256[],uint256)": FunctionFragment;
    "metaUpdateFulfillment(bytes,uint256,uint256,address[],string,uint256)": FunctionFragment;
    "replayNonce(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "bountiesContract",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "metaAcceptFulfillment",
    values: [
      BytesLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish[],
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "metaAddApprovers",
    values: [BytesLike, BigNumberish, BigNumberish, string[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "metaAddIssuers",
    values: [BytesLike, BigNumberish, BigNumberish, string[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "metaChangeApprover",
    values: [
      BytesLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      string,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "metaChangeBounty",
    values: [
      BytesLike,
      BigNumberish,
      BigNumberish,
      string[],
      string[],
      string,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "metaChangeData",
    values: [BytesLike, BigNumberish, BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "metaChangeDeadline",
    values: [BytesLike, BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "metaChangeIssuer",
    values: [
      BytesLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      string,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "metaContribute",
    values: [BytesLike, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "metaDrainBounty",
    values: [
      BytesLike,
      BigNumberish,
      BigNumberish,
      BigNumberish[],
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "metaFulfillAndAccept",
    values: [
      BytesLike,
      BigNumberish,
      string[],
      string,
      BigNumberish,
      BigNumberish[],
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "metaFulfillBounty",
    values: [BytesLike, BigNumberish, string[], string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "metaIssueAndContribute",
    values: [
      BytesLike,
      string[],
      string[],
      string,
      BigNumberish,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "metaIssueBounty",
    values: [
      BytesLike,
      string[],
      string[],
      string,
      BigNumberish,
      string,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "metaPerformAction",
    values: [BytesLike, BigNumberish, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "metaRefundContribution",
    values: [BytesLike, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "metaRefundContributions",
    values: [
      BytesLike,
      BigNumberish,
      BigNumberish,
      BigNumberish[],
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "metaRefundMyContributions",
    values: [BytesLike, BigNumberish, BigNumberish[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "metaUpdateFulfillment",
    values: [
      BytesLike,
      BigNumberish,
      BigNumberish,
      string[],
      string,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(functionFragment: "replayNonce", values: [string]): string;

  decodeFunctionResult(
    functionFragment: "bountiesContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaAcceptFulfillment",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaAddApprovers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaAddIssuers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaChangeApprover",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaChangeBounty",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaChangeData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaChangeDeadline",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaChangeIssuer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaContribute",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaDrainBounty",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaFulfillAndAccept",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaFulfillBounty",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaIssueAndContribute",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaIssueBounty",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaPerformAction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaRefundContribution",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaRefundContributions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaRefundMyContributions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaUpdateFulfillment",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "replayNonce",
    data: BytesLike
  ): Result;

  events: {};
}

export class BountiesMetaTxRelayer extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: BountiesMetaTxRelayerInterface;

  functions: {
    bountiesContract(overrides?: CallOverrides): Promise<[string]>;

    metaAcceptFulfillment(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaAddApprovers(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approvers: string[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaAddIssuers(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaChangeApprover(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approverId: BigNumberish,
      _approver: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaChangeBounty(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaChangeData(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _data: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaChangeDeadline(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _deadline: BigNumberish,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaChangeIssuer(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuerIdToChange: BigNumberish,
      _newIssuer: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaContribute(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _amount: BigNumberish,
      _nonce: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaDrainBounty(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _amounts: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaFulfillAndAccept(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaFulfillBounty(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaIssueAndContribute(
      signature: BytesLike,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      _depositAmount: BigNumberish,
      _nonce: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaIssueBounty(
      signature: BytesLike,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaPerformAction(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _data: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaRefundContribution(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _contributionId: BigNumberish,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaRefundContributions(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _contributionIds: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaRefundMyContributions(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _contributionIds: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaUpdateFulfillment(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    replayNonce(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  bountiesContract(overrides?: CallOverrides): Promise<string>;

  metaAcceptFulfillment(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _fulfillmentId: BigNumberish,
    _approverId: BigNumberish,
    _tokenAmounts: BigNumberish[],
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaAddApprovers(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _approvers: string[],
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaAddIssuers(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _issuers: string[],
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaChangeApprover(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _approverId: BigNumberish,
    _approver: string,
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaChangeBounty(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _issuers: string[],
    _approvers: string[],
    _data: string,
    _deadline: BigNumberish,
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaChangeData(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _data: string,
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaChangeDeadline(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _deadline: BigNumberish,
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaChangeIssuer(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _issuerIdToChange: BigNumberish,
    _newIssuer: string,
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaContribute(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _amount: BigNumberish,
    _nonce: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaDrainBounty(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _amounts: BigNumberish[],
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaFulfillAndAccept(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _fulfillers: string[],
    _data: string,
    _approverId: BigNumberish,
    _tokenAmounts: BigNumberish[],
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaFulfillBounty(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _fulfillers: string[],
    _data: string,
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaIssueAndContribute(
    signature: BytesLike,
    _issuers: string[],
    _approvers: string[],
    _data: string,
    _deadline: BigNumberish,
    _token: string,
    _tokenVersion: BigNumberish,
    _depositAmount: BigNumberish,
    _nonce: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaIssueBounty(
    signature: BytesLike,
    _issuers: string[],
    _approvers: string[],
    _data: string,
    _deadline: BigNumberish,
    _token: string,
    _tokenVersion: BigNumberish,
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaPerformAction(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _data: string,
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaRefundContribution(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _contributionId: BigNumberish,
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaRefundContributions(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _contributionIds: BigNumberish[],
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaRefundMyContributions(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _contributionIds: BigNumberish[],
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaUpdateFulfillment(
    _signature: BytesLike,
    _bountyId: BigNumberish,
    _fulfillmentId: BigNumberish,
    _fulfillers: string[],
    _data: string,
    _nonce: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  replayNonce(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    bountiesContract(overrides?: CallOverrides): Promise<string>;

    metaAcceptFulfillment(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaAddApprovers(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approvers: string[],
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaAddIssuers(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaChangeApprover(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approverId: BigNumberish,
      _approver: string,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaChangeBounty(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaChangeData(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _data: string,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaChangeDeadline(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _deadline: BigNumberish,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaChangeIssuer(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuerIdToChange: BigNumberish,
      _newIssuer: string,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaContribute(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _amount: BigNumberish,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaDrainBounty(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _amounts: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaFulfillAndAccept(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaFulfillBounty(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaIssueAndContribute(
      signature: BytesLike,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      _depositAmount: BigNumberish,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    metaIssueBounty(
      signature: BytesLike,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    metaPerformAction(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _data: string,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaRefundContribution(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _contributionId: BigNumberish,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaRefundContributions(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _contributionIds: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaRefundMyContributions(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _contributionIds: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    metaUpdateFulfillment(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _nonce: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    replayNonce(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    bountiesContract(overrides?: CallOverrides): Promise<BigNumber>;

    metaAcceptFulfillment(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaAddApprovers(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approvers: string[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaAddIssuers(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaChangeApprover(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approverId: BigNumberish,
      _approver: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaChangeBounty(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaChangeData(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _data: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaChangeDeadline(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _deadline: BigNumberish,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaChangeIssuer(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuerIdToChange: BigNumberish,
      _newIssuer: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaContribute(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _amount: BigNumberish,
      _nonce: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaDrainBounty(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _amounts: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaFulfillAndAccept(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaFulfillBounty(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaIssueAndContribute(
      signature: BytesLike,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      _depositAmount: BigNumberish,
      _nonce: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaIssueBounty(
      signature: BytesLike,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaPerformAction(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _data: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaRefundContribution(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _contributionId: BigNumberish,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaRefundContributions(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _contributionIds: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaRefundMyContributions(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _contributionIds: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaUpdateFulfillment(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    replayNonce(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    bountiesContract(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    metaAcceptFulfillment(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaAddApprovers(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approvers: string[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaAddIssuers(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaChangeApprover(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approverId: BigNumberish,
      _approver: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaChangeBounty(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaChangeData(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _data: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaChangeDeadline(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _deadline: BigNumberish,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaChangeIssuer(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuerIdToChange: BigNumberish,
      _newIssuer: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaContribute(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _amount: BigNumberish,
      _nonce: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaDrainBounty(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _amounts: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaFulfillAndAccept(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaFulfillBounty(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaIssueAndContribute(
      signature: BytesLike,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      _depositAmount: BigNumberish,
      _nonce: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaIssueBounty(
      signature: BytesLike,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaPerformAction(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _data: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaRefundContribution(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _contributionId: BigNumberish,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaRefundContributions(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _contributionIds: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaRefundMyContributions(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _contributionIds: BigNumberish[],
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaUpdateFulfillment(
      _signature: BytesLike,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _nonce: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    replayNonce(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
