/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface StandardBountiesInterface extends ethers.utils.Interface {
  functions: {
    "acceptFulfillment(address,uint256,uint256,uint256,uint256[])": FunctionFragment;
    "addApprovers(address,uint256,uint256,address[])": FunctionFragment;
    "addIssuers(address,uint256,uint256,address[])": FunctionFragment;
    "bounties(uint256)": FunctionFragment;
    "callStarted()": FunctionFragment;
    "changeApprover(address,uint256,uint256,uint256,address)": FunctionFragment;
    "changeBounty(address,uint256,uint256,address[],address[],string,uint256)": FunctionFragment;
    "changeData(address,uint256,uint256,string)": FunctionFragment;
    "changeDeadline(address,uint256,uint256,uint256)": FunctionFragment;
    "changeIssuer(address,uint256,uint256,uint256,address)": FunctionFragment;
    "changeIssuerAndApprover(address,uint256,uint256,uint256,uint256,address)": FunctionFragment;
    "contribute(address,uint256,uint256)": FunctionFragment;
    "drainBounty(address,uint256,uint256,uint256[])": FunctionFragment;
    "fulfillAndAccept(address,uint256,address[],string,uint256,uint256[])": FunctionFragment;
    "fulfillBounty(address,uint256,address[],string)": FunctionFragment;
    "getBounty(uint256)": FunctionFragment;
    "issueAndContribute(address,address[],address[],string,uint256,address,uint256,uint256)": FunctionFragment;
    "issueBounty(address,address[],address[],string,uint256,address,uint256)": FunctionFragment;
    "metaTxRelayer()": FunctionFragment;
    "numBounties()": FunctionFragment;
    "owner()": FunctionFragment;
    "performAction(address,uint256,string)": FunctionFragment;
    "refundContribution(address,uint256,uint256)": FunctionFragment;
    "refundContributions(address,uint256,uint256,uint256[])": FunctionFragment;
    "refundMyContributions(address,uint256,uint256[])": FunctionFragment;
    "setMetaTxRelayer(address)": FunctionFragment;
    "tokenBalances(uint256,uint256)": FunctionFragment;
    "updateFulfillment(address,uint256,uint256,address[],string)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "acceptFulfillment",
    values: [string, BigNumberish, BigNumberish, BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "addApprovers",
    values: [string, BigNumberish, BigNumberish, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "addIssuers",
    values: [string, BigNumberish, BigNumberish, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bounties",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "callStarted",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "changeApprover",
    values: [string, BigNumberish, BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "changeBounty",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      string[],
      string[],
      string,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "changeData",
    values: [string, BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "changeDeadline",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "changeIssuer",
    values: [string, BigNumberish, BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "changeIssuerAndApprover",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "contribute",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "drainBounty",
    values: [string, BigNumberish, BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "fulfillAndAccept",
    values: [
      string,
      BigNumberish,
      string[],
      string,
      BigNumberish,
      BigNumberish[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "fulfillBounty",
    values: [string, BigNumberish, string[], string]
  ): string;
  encodeFunctionData(
    functionFragment: "getBounty",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "issueAndContribute",
    values: [
      string,
      string[],
      string[],
      string,
      BigNumberish,
      string,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "issueBounty",
    values: [
      string,
      string[],
      string[],
      string,
      BigNumberish,
      string,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "metaTxRelayer",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "numBounties",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "performAction",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "refundContribution",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "refundContributions",
    values: [string, BigNumberish, BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "refundMyContributions",
    values: [string, BigNumberish, BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setMetaTxRelayer",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "tokenBalances",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateFulfillment",
    values: [string, BigNumberish, BigNumberish, string[], string]
  ): string;

  decodeFunctionResult(
    functionFragment: "acceptFulfillment",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addApprovers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addIssuers", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "bounties", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "callStarted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeApprover",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeBounty",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "changeData", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "changeDeadline",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeIssuer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "changeIssuerAndApprover",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "contribute", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "drainBounty",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fulfillAndAccept",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fulfillBounty",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getBounty", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "issueAndContribute",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "issueBounty",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "metaTxRelayer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "numBounties",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "performAction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "refundContribution",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "refundContributions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "refundMyContributions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMetaTxRelayer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokenBalances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateFulfillment",
    data: BytesLike
  ): Result;

  events: {
    "ActionPerformed(uint256,address,string)": EventFragment;
    "BountyApproversUpdated(uint256,address,address[])": EventFragment;
    "BountyChanged(uint256,address,address[],address[],string,uint256)": EventFragment;
    "BountyDataChanged(uint256,address,string)": EventFragment;
    "BountyDeadlineChanged(uint256,address,uint256)": EventFragment;
    "BountyDrained(uint256,address,uint256[])": EventFragment;
    "BountyFulfilled(uint256,uint256,address[],string,address)": EventFragment;
    "BountyIssued(uint256,address,address[],address[],string,uint256,address,uint256)": EventFragment;
    "BountyIssuersUpdated(uint256,address,address[])": EventFragment;
    "ContributionAdded(uint256,uint256,address,uint256)": EventFragment;
    "ContributionRefunded(uint256,uint256)": EventFragment;
    "ContributionsRefunded(uint256,address,uint256[])": EventFragment;
    "FulfillmentAccepted(uint256,uint256,address,uint256[])": EventFragment;
    "FulfillmentUpdated(uint256,uint256,address[],string)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ActionPerformed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BountyApproversUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BountyChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BountyDataChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BountyDeadlineChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BountyDrained"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BountyFulfilled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BountyIssued"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BountyIssuersUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ContributionAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ContributionRefunded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ContributionsRefunded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FulfillmentAccepted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "FulfillmentUpdated"): EventFragment;
}

export type ActionPerformedEvent = TypedEvent<
  [BigNumber, string, string] & {
    _bountyId: BigNumber;
    _fulfiller: string;
    _data: string;
  }
>;

export type BountyApproversUpdatedEvent = TypedEvent<
  [BigNumber, string, string[]] & {
    _bountyId: BigNumber;
    _changer: string;
    _approvers: string[];
  }
>;

export type BountyChangedEvent = TypedEvent<
  [BigNumber, string, string[], string[], string, BigNumber] & {
    _bountyId: BigNumber;
    _changer: string;
    _issuers: string[];
    _approvers: string[];
    _data: string;
    _deadline: BigNumber;
  }
>;

export type BountyDataChangedEvent = TypedEvent<
  [BigNumber, string, string] & {
    _bountyId: BigNumber;
    _changer: string;
    _data: string;
  }
>;

export type BountyDeadlineChangedEvent = TypedEvent<
  [BigNumber, string, BigNumber] & {
    _bountyId: BigNumber;
    _changer: string;
    _deadline: BigNumber;
  }
>;

export type BountyDrainedEvent = TypedEvent<
  [BigNumber, string, BigNumber[]] & {
    _bountyId: BigNumber;
    _issuer: string;
    _amounts: BigNumber[];
  }
>;

export type BountyFulfilledEvent = TypedEvent<
  [BigNumber, BigNumber, string[], string, string] & {
    _bountyId: BigNumber;
    _fulfillmentId: BigNumber;
    _fulfillers: string[];
    _data: string;
    _submitter: string;
  }
>;

export type BountyIssuedEvent = TypedEvent<
  [
    BigNumber,
    string,
    string[],
    string[],
    string,
    BigNumber,
    string,
    BigNumber
  ] & {
    _bountyId: BigNumber;
    _creator: string;
    _issuers: string[];
    _approvers: string[];
    _data: string;
    _deadline: BigNumber;
    _token: string;
    _tokenVersion: BigNumber;
  }
>;

export type BountyIssuersUpdatedEvent = TypedEvent<
  [BigNumber, string, string[]] & {
    _bountyId: BigNumber;
    _changer: string;
    _issuers: string[];
  }
>;

export type ContributionAddedEvent = TypedEvent<
  [BigNumber, BigNumber, string, BigNumber] & {
    _bountyId: BigNumber;
    _contributionId: BigNumber;
    _contributor: string;
    _amount: BigNumber;
  }
>;

export type ContributionRefundedEvent = TypedEvent<
  [BigNumber, BigNumber] & { _bountyId: BigNumber; _contributionId: BigNumber }
>;

export type ContributionsRefundedEvent = TypedEvent<
  [BigNumber, string, BigNumber[]] & {
    _bountyId: BigNumber;
    _issuer: string;
    _contributionIds: BigNumber[];
  }
>;

export type FulfillmentAcceptedEvent = TypedEvent<
  [BigNumber, BigNumber, string, BigNumber[]] & {
    _bountyId: BigNumber;
    _fulfillmentId: BigNumber;
    _approver: string;
    _tokenAmounts: BigNumber[];
  }
>;

export type FulfillmentUpdatedEvent = TypedEvent<
  [BigNumber, BigNumber, string[], string] & {
    _bountyId: BigNumber;
    _fulfillmentId: BigNumber;
    _fulfillers: string[];
    _data: string;
  }
>;

export class StandardBounties extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: StandardBountiesInterface;

  functions: {
    acceptFulfillment(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addApprovers(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approvers: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addIssuers(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    bounties(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, BigNumber, BigNumber, boolean] & {
        deadline: BigNumber;
        token: string;
        tokenVersion: BigNumber;
        balance: BigNumber;
        hasPaidOut: boolean;
      }
    >;

    callStarted(overrides?: CallOverrides): Promise<[boolean]>;

    changeApprover(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approverId: BigNumberish,
      _approver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    changeBounty(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    changeData(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    changeDeadline(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    changeIssuer(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuerIdToChange: BigNumberish,
      _newIssuer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    changeIssuerAndApprover(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuerIdToChange: BigNumberish,
      _approverIdToChange: BigNumberish,
      _issuer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    contribute(
      _sender: string,
      _bountyId: BigNumberish,
      _amount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    drainBounty(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    fulfillAndAccept(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    fulfillBounty(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getBounty(
      _bountyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string[],
          string[],
          BigNumber,
          string,
          BigNumber,
          BigNumber,
          boolean,
          ([string[], string] & { fulfillers: string[]; submitter: string })[],
          ([string, BigNumber, boolean] & {
            contributor: string;
            amount: BigNumber;
            refunded: boolean;
          })[]
        ] & {
          issuers: string[];
          approvers: string[];
          deadline: BigNumber;
          token: string;
          tokenVersion: BigNumber;
          balance: BigNumber;
          hasPaidOut: boolean;
          fulfillments: ([string[], string] & {
            fulfillers: string[];
            submitter: string;
          })[];
          contributions: ([string, BigNumber, boolean] & {
            contributor: string;
            amount: BigNumber;
            refunded: boolean;
          })[];
        }
      ]
    >;

    issueAndContribute(
      _sender: string,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      _depositAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    issueBounty(
      _sender: string,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    metaTxRelayer(overrides?: CallOverrides): Promise<[string]>;

    numBounties(overrides?: CallOverrides): Promise<[BigNumber]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    performAction(
      _sender: string,
      _bountyId: BigNumberish,
      _data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    refundContribution(
      _sender: string,
      _bountyId: BigNumberish,
      _contributionId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    refundContributions(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _contributionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    refundMyContributions(
      _sender: string,
      _bountyId: BigNumberish,
      _contributionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setMetaTxRelayer(
      _relayer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    tokenBalances(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    updateFulfillment(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  acceptFulfillment(
    _sender: string,
    _bountyId: BigNumberish,
    _fulfillmentId: BigNumberish,
    _approverId: BigNumberish,
    _tokenAmounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addApprovers(
    _sender: string,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _approvers: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addIssuers(
    _sender: string,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _issuers: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  bounties(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, string, BigNumber, BigNumber, boolean] & {
      deadline: BigNumber;
      token: string;
      tokenVersion: BigNumber;
      balance: BigNumber;
      hasPaidOut: boolean;
    }
  >;

  callStarted(overrides?: CallOverrides): Promise<boolean>;

  changeApprover(
    _sender: string,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _approverId: BigNumberish,
    _approver: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  changeBounty(
    _sender: string,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _issuers: string[],
    _approvers: string[],
    _data: string,
    _deadline: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  changeData(
    _sender: string,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _data: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  changeDeadline(
    _sender: string,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _deadline: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  changeIssuer(
    _sender: string,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _issuerIdToChange: BigNumberish,
    _newIssuer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  changeIssuerAndApprover(
    _sender: string,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _issuerIdToChange: BigNumberish,
    _approverIdToChange: BigNumberish,
    _issuer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  contribute(
    _sender: string,
    _bountyId: BigNumberish,
    _amount: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  drainBounty(
    _sender: string,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _amounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  fulfillAndAccept(
    _sender: string,
    _bountyId: BigNumberish,
    _fulfillers: string[],
    _data: string,
    _approverId: BigNumberish,
    _tokenAmounts: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  fulfillBounty(
    _sender: string,
    _bountyId: BigNumberish,
    _fulfillers: string[],
    _data: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getBounty(
    _bountyId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      string[],
      string[],
      BigNumber,
      string,
      BigNumber,
      BigNumber,
      boolean,
      ([string[], string] & { fulfillers: string[]; submitter: string })[],
      ([string, BigNumber, boolean] & {
        contributor: string;
        amount: BigNumber;
        refunded: boolean;
      })[]
    ] & {
      issuers: string[];
      approvers: string[];
      deadline: BigNumber;
      token: string;
      tokenVersion: BigNumber;
      balance: BigNumber;
      hasPaidOut: boolean;
      fulfillments: ([string[], string] & {
        fulfillers: string[];
        submitter: string;
      })[];
      contributions: ([string, BigNumber, boolean] & {
        contributor: string;
        amount: BigNumber;
        refunded: boolean;
      })[];
    }
  >;

  issueAndContribute(
    _sender: string,
    _issuers: string[],
    _approvers: string[],
    _data: string,
    _deadline: BigNumberish,
    _token: string,
    _tokenVersion: BigNumberish,
    _depositAmount: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  issueBounty(
    _sender: string,
    _issuers: string[],
    _approvers: string[],
    _data: string,
    _deadline: BigNumberish,
    _token: string,
    _tokenVersion: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  metaTxRelayer(overrides?: CallOverrides): Promise<string>;

  numBounties(overrides?: CallOverrides): Promise<BigNumber>;

  owner(overrides?: CallOverrides): Promise<string>;

  performAction(
    _sender: string,
    _bountyId: BigNumberish,
    _data: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  refundContribution(
    _sender: string,
    _bountyId: BigNumberish,
    _contributionId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  refundContributions(
    _sender: string,
    _bountyId: BigNumberish,
    _issuerId: BigNumberish,
    _contributionIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  refundMyContributions(
    _sender: string,
    _bountyId: BigNumberish,
    _contributionIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setMetaTxRelayer(
    _relayer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  tokenBalances(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<boolean>;

  updateFulfillment(
    _sender: string,
    _bountyId: BigNumberish,
    _fulfillmentId: BigNumberish,
    _fulfillers: string[],
    _data: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    acceptFulfillment(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    addApprovers(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approvers: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    addIssuers(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    bounties(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, string, BigNumber, BigNumber, boolean] & {
        deadline: BigNumber;
        token: string;
        tokenVersion: BigNumber;
        balance: BigNumber;
        hasPaidOut: boolean;
      }
    >;

    callStarted(overrides?: CallOverrides): Promise<boolean>;

    changeApprover(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approverId: BigNumberish,
      _approver: string,
      overrides?: CallOverrides
    ): Promise<void>;

    changeBounty(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    changeData(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _data: string,
      overrides?: CallOverrides
    ): Promise<void>;

    changeDeadline(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _deadline: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    changeIssuer(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuerIdToChange: BigNumberish,
      _newIssuer: string,
      overrides?: CallOverrides
    ): Promise<void>;

    changeIssuerAndApprover(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuerIdToChange: BigNumberish,
      _approverIdToChange: BigNumberish,
      _issuer: string,
      overrides?: CallOverrides
    ): Promise<void>;

    contribute(
      _sender: string,
      _bountyId: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    drainBounty(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _amounts: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    fulfillAndAccept(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    fulfillBounty(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getBounty(
      _bountyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        string[],
        string[],
        BigNumber,
        string,
        BigNumber,
        BigNumber,
        boolean,
        ([string[], string] & { fulfillers: string[]; submitter: string })[],
        ([string, BigNumber, boolean] & {
          contributor: string;
          amount: BigNumber;
          refunded: boolean;
        })[]
      ] & {
        issuers: string[];
        approvers: string[];
        deadline: BigNumber;
        token: string;
        tokenVersion: BigNumber;
        balance: BigNumber;
        hasPaidOut: boolean;
        fulfillments: ([string[], string] & {
          fulfillers: string[];
          submitter: string;
        })[];
        contributions: ([string, BigNumber, boolean] & {
          contributor: string;
          amount: BigNumber;
          refunded: boolean;
        })[];
      }
    >;

    issueAndContribute(
      _sender: string,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      _depositAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    issueBounty(
      _sender: string,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    metaTxRelayer(overrides?: CallOverrides): Promise<string>;

    numBounties(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    performAction(
      _sender: string,
      _bountyId: BigNumberish,
      _data: string,
      overrides?: CallOverrides
    ): Promise<void>;

    refundContribution(
      _sender: string,
      _bountyId: BigNumberish,
      _contributionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    refundContributions(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _contributionIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    refundMyContributions(
      _sender: string,
      _bountyId: BigNumberish,
      _contributionIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    setMetaTxRelayer(
      _relayer: string,
      overrides?: CallOverrides
    ): Promise<void>;

    tokenBalances(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    updateFulfillment(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "ActionPerformed(uint256,address,string)"(
      _bountyId?: null,
      _fulfiller?: null,
      _data?: null
    ): TypedEventFilter<
      [BigNumber, string, string],
      { _bountyId: BigNumber; _fulfiller: string; _data: string }
    >;

    ActionPerformed(
      _bountyId?: null,
      _fulfiller?: null,
      _data?: null
    ): TypedEventFilter<
      [BigNumber, string, string],
      { _bountyId: BigNumber; _fulfiller: string; _data: string }
    >;

    "BountyApproversUpdated(uint256,address,address[])"(
      _bountyId?: null,
      _changer?: null,
      _approvers?: null
    ): TypedEventFilter<
      [BigNumber, string, string[]],
      { _bountyId: BigNumber; _changer: string; _approvers: string[] }
    >;

    BountyApproversUpdated(
      _bountyId?: null,
      _changer?: null,
      _approvers?: null
    ): TypedEventFilter<
      [BigNumber, string, string[]],
      { _bountyId: BigNumber; _changer: string; _approvers: string[] }
    >;

    "BountyChanged(uint256,address,address[],address[],string,uint256)"(
      _bountyId?: null,
      _changer?: null,
      _issuers?: null,
      _approvers?: null,
      _data?: null,
      _deadline?: null
    ): TypedEventFilter<
      [BigNumber, string, string[], string[], string, BigNumber],
      {
        _bountyId: BigNumber;
        _changer: string;
        _issuers: string[];
        _approvers: string[];
        _data: string;
        _deadline: BigNumber;
      }
    >;

    BountyChanged(
      _bountyId?: null,
      _changer?: null,
      _issuers?: null,
      _approvers?: null,
      _data?: null,
      _deadline?: null
    ): TypedEventFilter<
      [BigNumber, string, string[], string[], string, BigNumber],
      {
        _bountyId: BigNumber;
        _changer: string;
        _issuers: string[];
        _approvers: string[];
        _data: string;
        _deadline: BigNumber;
      }
    >;

    "BountyDataChanged(uint256,address,string)"(
      _bountyId?: null,
      _changer?: null,
      _data?: null
    ): TypedEventFilter<
      [BigNumber, string, string],
      { _bountyId: BigNumber; _changer: string; _data: string }
    >;

    BountyDataChanged(
      _bountyId?: null,
      _changer?: null,
      _data?: null
    ): TypedEventFilter<
      [BigNumber, string, string],
      { _bountyId: BigNumber; _changer: string; _data: string }
    >;

    "BountyDeadlineChanged(uint256,address,uint256)"(
      _bountyId?: null,
      _changer?: null,
      _deadline?: null
    ): TypedEventFilter<
      [BigNumber, string, BigNumber],
      { _bountyId: BigNumber; _changer: string; _deadline: BigNumber }
    >;

    BountyDeadlineChanged(
      _bountyId?: null,
      _changer?: null,
      _deadline?: null
    ): TypedEventFilter<
      [BigNumber, string, BigNumber],
      { _bountyId: BigNumber; _changer: string; _deadline: BigNumber }
    >;

    "BountyDrained(uint256,address,uint256[])"(
      _bountyId?: null,
      _issuer?: null,
      _amounts?: null
    ): TypedEventFilter<
      [BigNumber, string, BigNumber[]],
      { _bountyId: BigNumber; _issuer: string; _amounts: BigNumber[] }
    >;

    BountyDrained(
      _bountyId?: null,
      _issuer?: null,
      _amounts?: null
    ): TypedEventFilter<
      [BigNumber, string, BigNumber[]],
      { _bountyId: BigNumber; _issuer: string; _amounts: BigNumber[] }
    >;

    "BountyFulfilled(uint256,uint256,address[],string,address)"(
      _bountyId?: null,
      _fulfillmentId?: null,
      _fulfillers?: null,
      _data?: null,
      _submitter?: null
    ): TypedEventFilter<
      [BigNumber, BigNumber, string[], string, string],
      {
        _bountyId: BigNumber;
        _fulfillmentId: BigNumber;
        _fulfillers: string[];
        _data: string;
        _submitter: string;
      }
    >;

    BountyFulfilled(
      _bountyId?: null,
      _fulfillmentId?: null,
      _fulfillers?: null,
      _data?: null,
      _submitter?: null
    ): TypedEventFilter<
      [BigNumber, BigNumber, string[], string, string],
      {
        _bountyId: BigNumber;
        _fulfillmentId: BigNumber;
        _fulfillers: string[];
        _data: string;
        _submitter: string;
      }
    >;

    "BountyIssued(uint256,address,address[],address[],string,uint256,address,uint256)"(
      _bountyId?: null,
      _creator?: null,
      _issuers?: null,
      _approvers?: null,
      _data?: null,
      _deadline?: null,
      _token?: null,
      _tokenVersion?: null
    ): TypedEventFilter<
      [
        BigNumber,
        string,
        string[],
        string[],
        string,
        BigNumber,
        string,
        BigNumber
      ],
      {
        _bountyId: BigNumber;
        _creator: string;
        _issuers: string[];
        _approvers: string[];
        _data: string;
        _deadline: BigNumber;
        _token: string;
        _tokenVersion: BigNumber;
      }
    >;

    BountyIssued(
      _bountyId?: null,
      _creator?: null,
      _issuers?: null,
      _approvers?: null,
      _data?: null,
      _deadline?: null,
      _token?: null,
      _tokenVersion?: null
    ): TypedEventFilter<
      [
        BigNumber,
        string,
        string[],
        string[],
        string,
        BigNumber,
        string,
        BigNumber
      ],
      {
        _bountyId: BigNumber;
        _creator: string;
        _issuers: string[];
        _approvers: string[];
        _data: string;
        _deadline: BigNumber;
        _token: string;
        _tokenVersion: BigNumber;
      }
    >;

    "BountyIssuersUpdated(uint256,address,address[])"(
      _bountyId?: null,
      _changer?: null,
      _issuers?: null
    ): TypedEventFilter<
      [BigNumber, string, string[]],
      { _bountyId: BigNumber; _changer: string; _issuers: string[] }
    >;

    BountyIssuersUpdated(
      _bountyId?: null,
      _changer?: null,
      _issuers?: null
    ): TypedEventFilter<
      [BigNumber, string, string[]],
      { _bountyId: BigNumber; _changer: string; _issuers: string[] }
    >;

    "ContributionAdded(uint256,uint256,address,uint256)"(
      _bountyId?: null,
      _contributionId?: null,
      _contributor?: null,
      _amount?: null
    ): TypedEventFilter<
      [BigNumber, BigNumber, string, BigNumber],
      {
        _bountyId: BigNumber;
        _contributionId: BigNumber;
        _contributor: string;
        _amount: BigNumber;
      }
    >;

    ContributionAdded(
      _bountyId?: null,
      _contributionId?: null,
      _contributor?: null,
      _amount?: null
    ): TypedEventFilter<
      [BigNumber, BigNumber, string, BigNumber],
      {
        _bountyId: BigNumber;
        _contributionId: BigNumber;
        _contributor: string;
        _amount: BigNumber;
      }
    >;

    "ContributionRefunded(uint256,uint256)"(
      _bountyId?: null,
      _contributionId?: null
    ): TypedEventFilter<
      [BigNumber, BigNumber],
      { _bountyId: BigNumber; _contributionId: BigNumber }
    >;

    ContributionRefunded(
      _bountyId?: null,
      _contributionId?: null
    ): TypedEventFilter<
      [BigNumber, BigNumber],
      { _bountyId: BigNumber; _contributionId: BigNumber }
    >;

    "ContributionsRefunded(uint256,address,uint256[])"(
      _bountyId?: null,
      _issuer?: null,
      _contributionIds?: null
    ): TypedEventFilter<
      [BigNumber, string, BigNumber[]],
      { _bountyId: BigNumber; _issuer: string; _contributionIds: BigNumber[] }
    >;

    ContributionsRefunded(
      _bountyId?: null,
      _issuer?: null,
      _contributionIds?: null
    ): TypedEventFilter<
      [BigNumber, string, BigNumber[]],
      { _bountyId: BigNumber; _issuer: string; _contributionIds: BigNumber[] }
    >;

    "FulfillmentAccepted(uint256,uint256,address,uint256[])"(
      _bountyId?: null,
      _fulfillmentId?: null,
      _approver?: null,
      _tokenAmounts?: null
    ): TypedEventFilter<
      [BigNumber, BigNumber, string, BigNumber[]],
      {
        _bountyId: BigNumber;
        _fulfillmentId: BigNumber;
        _approver: string;
        _tokenAmounts: BigNumber[];
      }
    >;

    FulfillmentAccepted(
      _bountyId?: null,
      _fulfillmentId?: null,
      _approver?: null,
      _tokenAmounts?: null
    ): TypedEventFilter<
      [BigNumber, BigNumber, string, BigNumber[]],
      {
        _bountyId: BigNumber;
        _fulfillmentId: BigNumber;
        _approver: string;
        _tokenAmounts: BigNumber[];
      }
    >;

    "FulfillmentUpdated(uint256,uint256,address[],string)"(
      _bountyId?: null,
      _fulfillmentId?: null,
      _fulfillers?: null,
      _data?: null
    ): TypedEventFilter<
      [BigNumber, BigNumber, string[], string],
      {
        _bountyId: BigNumber;
        _fulfillmentId: BigNumber;
        _fulfillers: string[];
        _data: string;
      }
    >;

    FulfillmentUpdated(
      _bountyId?: null,
      _fulfillmentId?: null,
      _fulfillers?: null,
      _data?: null
    ): TypedEventFilter<
      [BigNumber, BigNumber, string[], string],
      {
        _bountyId: BigNumber;
        _fulfillmentId: BigNumber;
        _fulfillers: string[];
        _data: string;
      }
    >;
  };

  estimateGas: {
    acceptFulfillment(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addApprovers(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approvers: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addIssuers(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    bounties(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    callStarted(overrides?: CallOverrides): Promise<BigNumber>;

    changeApprover(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approverId: BigNumberish,
      _approver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    changeBounty(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    changeData(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    changeDeadline(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    changeIssuer(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuerIdToChange: BigNumberish,
      _newIssuer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    changeIssuerAndApprover(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuerIdToChange: BigNumberish,
      _approverIdToChange: BigNumberish,
      _issuer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    contribute(
      _sender: string,
      _bountyId: BigNumberish,
      _amount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    drainBounty(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    fulfillAndAccept(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    fulfillBounty(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getBounty(
      _bountyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    issueAndContribute(
      _sender: string,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      _depositAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    issueBounty(
      _sender: string,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    metaTxRelayer(overrides?: CallOverrides): Promise<BigNumber>;

    numBounties(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    performAction(
      _sender: string,
      _bountyId: BigNumberish,
      _data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    refundContribution(
      _sender: string,
      _bountyId: BigNumberish,
      _contributionId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    refundContributions(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _contributionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    refundMyContributions(
      _sender: string,
      _bountyId: BigNumberish,
      _contributionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setMetaTxRelayer(
      _relayer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    tokenBalances(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    updateFulfillment(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    acceptFulfillment(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addApprovers(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approvers: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addIssuers(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    bounties(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    callStarted(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    changeApprover(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _approverId: BigNumberish,
      _approver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    changeBounty(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    changeData(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    changeDeadline(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    changeIssuer(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuerIdToChange: BigNumberish,
      _newIssuer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    changeIssuerAndApprover(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _issuerIdToChange: BigNumberish,
      _approverIdToChange: BigNumberish,
      _issuer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    contribute(
      _sender: string,
      _bountyId: BigNumberish,
      _amount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    drainBounty(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _amounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    fulfillAndAccept(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      _approverId: BigNumberish,
      _tokenAmounts: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    fulfillBounty(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getBounty(
      _bountyId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    issueAndContribute(
      _sender: string,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      _depositAmount: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    issueBounty(
      _sender: string,
      _issuers: string[],
      _approvers: string[],
      _data: string,
      _deadline: BigNumberish,
      _token: string,
      _tokenVersion: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    metaTxRelayer(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    numBounties(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    performAction(
      _sender: string,
      _bountyId: BigNumberish,
      _data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    refundContribution(
      _sender: string,
      _bountyId: BigNumberish,
      _contributionId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    refundContributions(
      _sender: string,
      _bountyId: BigNumberish,
      _issuerId: BigNumberish,
      _contributionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    refundMyContributions(
      _sender: string,
      _bountyId: BigNumberish,
      _contributionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setMetaTxRelayer(
      _relayer: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    tokenBalances(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    updateFulfillment(
      _sender: string,
      _bountyId: BigNumberish,
      _fulfillmentId: BigNumberish,
      _fulfillers: string[],
      _data: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
